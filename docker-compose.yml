version: "3.9"
services:
  etl_pipeline:
    build:
      context: ./etl_pipeline
      dockerfile: ./Dockerfile
    container_name: etl_pipeline
    image: etl_pipeline:latest
    ports:
      - "4000:4000"
    volumes:
      - ./etl_pipeline:/opt/dagster/app
    env_file:
      - .env
    networks:
      - de_network

  de_psql:
    image: postgres:17
    container_name: de_psql
    ports:
      - "5433:5432"
    volumes:
      - ./volumes/postgresql:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - de_network

  de_dagster:
    build:
      context: ./dagster/
    image: de_dagster
    container_name: de_dagster

  de_dagster_dagit:
    image: de_dagster:latest
    container_name: de_dagster_dagit
    entrypoint: ["dagit", "-h", "0.0.0.0", "-p", "3001", "-w", "workspace.yaml"]
    expose:
      - "3001"
    ports:
      - "3001:3001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./dagster_home:/opt/dagster/dagster_home
    env_file:
      - .env
    depends_on:
      - de_psql
    networks:
      - de_network

  de_dagster_daemon:
    image: de_dagster:latest
    container_name: de_dagster_daemon
    entrypoint: ["dagster-daemon", "run"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./dagster_home:/opt/dagster/dagster_home
    env_file:
      - .env
    depends_on:
      - de_psql
    networks:
      - de_network

  de_mysql:
    image: mysql:8.0
    container_name: de_mysql
    volumes:
      - ./volumes/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    env_file:
      - .env
    networks:
      - de_network


  minio:
    hostname: minio
    image: minio/minio
    container_name: minio
    ports:
      - "9002:9000"
      - "9001:9001"
    command: ["server", "/data", "--console-address", ":9001"]
    volumes:
      - ./volumes/minio:/data
    env_file:
      - .env
    networks:
      - de_network

  mc:
    image: minio/mc
    container_name: mc
    hostname: mc
    env_file:
      - .env
    entrypoint: >
      /bin/sh -c "
        until /usr/bin/mc alias set minio http://minio:9000 minio minio123; do
          echo '...waiting for minio...' && sleep 1;
        done;
        /usr/bin/mc mb -p minio/warehouse;
        /usr/bin/mc anonymous set public minio/warehouse;
        exit 0;
      "
    depends_on:
      - minio
    networks:
      - de_network

  # clickhouse:
  #   build:
  #     context: ./clickhouse
  #     dockerfile: Dockerfile
  #   container_name: clickhouse
  #   ports:
  #     - "8123:8123" # HTTP
  #     - "9000:9000" # Native TCP
  #   volumes:
  #     - ./volumes/clickhouse:/var/lib/clickhouse
  #     # - ./clickhouse/config/config.xml:/etc/clickhouse-server/config.xml:ro
  #     # - ./clickhouse/config/users.xml:/etc/clickhouse-server/users.xml:ro
  #     # - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql
  #   env_file:
  #     - .env
  #   ulimits:
  #     nofile:
  #       soft: 262144
  #       hard: 262144
  #   networks:
  #     - de_network

  # clickhouse-client:
  #   image: clickhouse/clickhouse-client:latest
  #   container_name: clickhouse-client
  #   entrypoint: >
  #     /bin/sh -c "
  #       until clickhouse-client --host clickhouse --query 'SELECT 1'; do
  #         echo '...waiting for clickhouse...' && sleep 1;
  #       done;
  #       exec clickhouse-client --host clickhouse
  #     "
  #   depends_on:
  #     - clickhouse
  #   networks:
  #     - de_network


  # Spark
  spark-master:
    build:
      context: ./spark
      dockerfile: ./Dockerfile
    image: custom-spark:latest 
    container_name: spark-master
    hostname: spark-master
    # SỬA Ở ĐÂY: Thêm /opt/spark/
    command: /opt/spark/bin/spark-class org.apache.spark.deploy.master.Master --host spark-master
    env_file:
      - .env
    ports:
      - "7077:7077"
      - "8082:8080"
    volumes:
      - ./spark/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf
    networks:
      - de_network

  spark-worker-1:
    image: custom-spark:latest
    container_name: spark-worker-1
    hostname: spark-worker-1
    env_file:
      - .env
    depends_on:
      - spark-master
    # SỬA Ở ĐÂY: Thêm /opt/spark/
    command: /opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    ports:
      - "8081:8081" 
    networks:
      - de_network

  spark-worker-2:
    image: custom-spark:latest
    container_name: spark-worker-2
    hostname: spark-worker-2
    env_file:
      - .env
    depends_on:
      - spark-master
    # SỬA Ở ĐÂY: Thêm /opt/spark/
    command: /opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    ports:
      - "8083:8081" 
    networks:
      - de_network

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    hostname: metabase
    volumes:
      - ./data/metabase:/metabase_data
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - de_psql
    networks:
      - de_network

networks:
  de_network:
    driver: bridge
    name: de_network